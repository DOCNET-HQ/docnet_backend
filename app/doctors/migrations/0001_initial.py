# Generated by Django 4.2 on 2025-09-04 11:36

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import utils.file_uploads
import utils.validations
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Doctor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=255)),
                (
                    "dob",
                    models.DateField(blank=True, help_text="Date of Birth", null=True),
                ),
                ("phone_number", models.CharField(blank=True, max_length=15)),
                ("website", models.URLField(blank=True, null=True)),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to=utils.file_uploads.upload_profile_photo,
                    ),
                ),
                ("address", models.CharField(blank=True, max_length=255)),
                (
                    "country",
                    models.CharField(blank=True, help_text="Country", max_length=100),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True, help_text="State or Province", max_length=100
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, help_text="City or Town", max_length=100
                    ),
                ),
                ("postal_code", models.CharField(blank=True, max_length=20)),
                (
                    "id_document",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=utils.file_uploads.upload_id_documents,
                        validators=[utils.validations.validate_id_file],
                    ),
                ),
                (
                    "kyc_status",
                    models.CharField(
                        choices=[
                            ("PENDING", "PENDING"),
                            ("APPROVED", "APPROVED"),
                            ("REJECTED", "REJECTED"),
                            ("SUSPENDED", "SUSPENDED"),
                        ],
                        default="PENDING",
                        help_text="KYC status of the user",
                        max_length=10,
                    ),
                ),
                ("is_active", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("MALE", "MALE"),
                            ("FEMALE", "FEMALE"),
                            ("OTHER", "OTHER"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "specialty",
                    models.CharField(
                        blank=True,
                        help_text="Medical specialty of the doctor",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "degree",
                    models.CharField(
                        blank=True,
                        help_text="Highest medical degree obtained by the doctor",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "years_of_experience",
                    models.PositiveIntegerField(
                        blank=True,
                        help_text="Number of years the doctor has been practicing",
                        null=True,
                    ),
                ),
                (
                    "license_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "license_issuance_authority",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "license_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("license_issue_date", models.DateField(blank=True, null=True)),
                ("license_expiry_date", models.DateField(blank=True, null=True)),
                (
                    "license_document",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to=utils.file_uploads.upload_doctors_license,
                        validators=[utils.validations.validate_id_file],
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="doctor_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Doctor",
                "verbose_name_plural": "Doctors",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DoctorKYCRecord",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "PENDING"),
                            ("APPROVED", "APPROVED"),
                            ("REJECTED", "REJECTED"),
                            ("SUSPENDED", "SUSPENDED"),
                        ],
                        default="PENDING",
                        max_length=20,
                    ),
                ),
                ("reason", models.TextField(blank=True, null=True)),
                ("reviewed_at", models.DateTimeField(auto_now_add=True)),
                (
                    "doctor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="kyc_records",
                        to="doctors.doctor",
                    ),
                ),
                (
                    "reviewed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="doctor_kyc_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Doctor KYC Record",
                "verbose_name_plural": "Doctor KYC Records",
                "ordering": ["-reviewed_at"],
            },
        ),
    ]
